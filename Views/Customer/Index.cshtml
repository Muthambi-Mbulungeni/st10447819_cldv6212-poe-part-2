<!-- Views/Customer/Index.cshtml -->
@model IEnumerable<ABCRetailers.Models.Customer>
@{
    ViewData["Title"] = "Customers";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fas fa-users"></i> Customers</h2>
    <a asp-action="Create" class="btn btn-primary">
        <i class="fas fa-plus"></i> Add New Customer
    </a>
</div>

@if (Model.Any())
{
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Customer ID</th>
                    <th>Name</th>
                    <th>Surname</th>
                    <th>Username</th>
                    <th>Email</th>
                    <th>Shipping Address</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var customer in Model)
                {
                    <tr>
                        <td><code>@customer.CustomerId.Substring(0, 8)...</code></td>
                        <td>@customer.Name</td>
                        <td>@customer.Surname</td>
                        <td>@customer.Username</td>
                        <td>@customer.Email</td>
                        <td>@customer.ShippingAddress</td>
                        <td>
                            <div class="btn-group" role="group">
                                <a asp-action="Edit" asp-route-id="@customer.RowKey" class="btn btn-sm btn-outline-primary">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <button type="button" class="btn btn-sm btn-outline-danger" onclick="confirmDelete('@customer.RowKey', '@customer.Name @customer.Surname')">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="alert alert-info">
        <i class="fas fa-info-circle"></i> No customers found.
        <a asp-action="Create" class="alert-link">Add your first customer</a>!
    </div>
}

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete customer <strong id="customerName"></strong>?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" id="confirmDeleteCustomerBtn" class="btn btn-danger">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function confirmDelete(customerId, customerName) {
            if (typeof clearStuckModalBackdrop === 'function') { clearStuckModalBackdrop(); }
            document.getElementById('customerName').textContent = customerName;
            let deleteId = document.getElementById('deleteCustomerId');
            if (!deleteId) {
                deleteId = document.createElement('input');
                deleteId.type = 'hidden';
                deleteId.id = 'deleteCustomerId';
                document.getElementById('deleteModal').appendChild(deleteId);
            }
            deleteId.value = customerId;
            const modal = bootstrap.Modal.getOrCreateInstance(document.getElementById('deleteModal'));
            modal.show();
        }

        document.addEventListener('DOMContentLoaded', function () {
            const modalEl = document.getElementById('deleteModal');
            const modal = bootstrap.Modal.getOrCreateInstance(modalEl);
            const confirmBtn = document.getElementById('confirmDeleteCustomerBtn');
            const getId = () => document.getElementById('deleteCustomerId')?.value || '';

            if (modalEl && !modalEl.dataset.cleanupBound) {
                modalEl.addEventListener('hidden.bs.modal', function () {
                    if (typeof clearStuckModalBackdrop === 'function') { clearStuckModalBackdrop(); }
                });
                modalEl.dataset.cleanupBound = 'true';
            }

            if (confirmBtn) {
                confirmBtn.addEventListener('click', async function () {
                    confirmBtn.disabled = true;
                    try {
                        const id = getId();
                        const res = await fetch('/Customer/DeleteAjax', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ id })
                        });
                        const data = await res.json();
                        try { modal.hide(); } catch (_) {}
                        if (typeof clearStuckModalBackdrop === 'function') { setTimeout(clearStuckModalBackdrop, 0); }
                        if (data && data.success) {
                            window.location.reload();
                        } else {
                            alert('Delete failed: ' + (data && data.message ? data.message : 'Unknown error'));
                        }
                    } catch (e) {
                        try { modal.hide(); } catch (_) {}
                        if (typeof clearStuckModalBackdrop === 'function') { setTimeout(clearStuckModalBackdrop, 0); }
                        alert('Delete failed.');
                    } finally {
                        confirmBtn.disabled = false;
                    }
                });
            }
        });
    </script>
}



































